{"remainingRequest":"/Users/Aria/Documents/Study/Курсы/GeekBrains/Project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Aria/Documents/Study/Курсы/GeekBrains/Project/src/components/CostsForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Aria/Documents/Study/Курсы/GeekBrains/Project/src/components/CostsForm.vue","mtime":1633977469993},{"path":"/Users/Aria/Documents/Study/Курсы/GeekBrains/Project/node_modules/cache-loader/dist/cjs.js","mtime":1609939389859},{"path":"/Users/Aria/Documents/Study/Курсы/GeekBrains/Project/node_modules/babel-loader/lib/index.js","mtime":1609939389692},{"path":"/Users/Aria/Documents/Study/Курсы/GeekBrains/Project/node_modules/cache-loader/dist/cjs.js","mtime":1609939389859},{"path":"/Users/Aria/Documents/Study/Курсы/GeekBrains/Project/node_modules/vue-loader/lib/index.js","mtime":1624876892318}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCcKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdDb3N0c0Zvcm0nLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmb3JtOiB7CiAgICAgICAgaWQ6ICcnLCAgCiAgICAgICAgY2F0ZWdvcnk6ICcnLAogICAgICAgIHZhbHVlOiAnJywKICAgICAgICBkYXRlOiAnJywKICAgICAgfSwKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmZvcm0uY2F0ZWdvcnkgPSB0aGlzLiRyb3V0ZS5uYW1lID8gdGhpcy4kcm91dGUubmFtZSA6ICcnOwogICAgdGhpcy5mb3JtLnZhbHVlID0gdGhpcy4kcm91dGUucGFyYW1zLnZhbHVlID8gdGhpcy4kcm91dGUucGFyYW1zLnZhbHVlIDogJyc7CiAgICB0aGlzLmZvcm0uZGF0ZSA9IE9iamVjdC5rZXlzKHRoaXMuJHJvdXRlLnBhcmFtcykubGVuZ3RoID8gdGhpcy5nZXRDdXJyZW50RGF5KCkgOiAnJzsKICB9LAogIGNvbXB1dGVkOiB7CiAgLi4ubWFwU3RhdGUoWydjYXRlZ29yeUxpc3QnXSkKfSwKICBtZXRob2RzOiB7CiAgICBnZXRDdXJyZW50RGF5KCl7CiAgICAgIGNvbnN0IHRvZGF5ID0gbmV3IERhdGUoKTsKICAgICAgY29uc3QgZCA9IHRvZGF5LmdldERhdGUoKTsKICAgICAgY29uc3QgbSA9IHRvZGF5LmdldE1vbnRoKCkgKyAxOwogICAgICBjb25zdCB5ID0gdG9kYXkuZ2V0RnVsbFllYXIoKTsKICAgICAgcmV0dXJuIGAke3l9LSR7bX0tJHtkfWAKICAgIH0sCiAgICBvblN1Ym1pdCgpIHsKICAgICAgY29uc3Qge3ZhbHVlLCBjYXRlZ29yeSwgZGF0ZX0gPSB0aGlzLmZvcm07CiAgICAgIGNvbnN0IGRhdGEgPSB7CiAgICAgICAgaWQ6IHRoaXMuY2F0ZWdvcnlMaXN0Lmxlbmd0aCArIDEsCiAgICAgICAgY2F0ZWdvcnksCiAgICAgICAgdmFsdWUsCiAgICAgICAgZGF0ZTogZGF0ZSB8fCB0aGlzLmdldEN1cnJlbnREYXkoKQogICAgICB9CiAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZUNvc3RzJywgZGF0YSk7CiAgICB9LAogIH0KfQo="},{"version":3,"sources":["CostsForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CostsForm.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <el-form ref=\"form\" :model=\"form\" label-width=\"120px\">\n        <el-form-item>\n            <label for=\"category\">Категория:</label>\n            <el-input id=\"category\" v-model=\"form.category\"></el-input>\n        </el-form-item>\n        <el-form-item>\n            <label for=\"value\">Значение:</label>\n            <el-input id=\"value\" v-model=\"form.value\"></el-input>\n        </el-form-item>\n        <el-form-item>\n            <label for=\"date\">Дата:</label>\n            <el-input id=\"date\" v-model=\"form.date\"></el-input>\n        </el-form-item>\n        <el-form-item>\n            <button class=\"add-button\" type=\"button\" @click=\"onSubmit\">Создать</button>\n        </el-form-item>\n    </el-form>\n</template>\n\n<script>\n  import { mapState } from 'vuex'\n  export default {\n    name: 'CostsForm',\n    data() {\n      return {\n        form: {\n          id: '',  \n          category: '',\n          value: '',\n          date: '',\n        },\n      }\n    },\n    mounted() {\n      this.form.category = this.$route.name ? this.$route.name : '';\n      this.form.value = this.$route.params.value ? this.$route.params.value : '';\n      this.form.date = Object.keys(this.$route.params).length ? this.getCurrentDay() : '';\n    },\n    computed: {\n    ...mapState(['categoryList'])\n  },\n    methods: {\n      getCurrentDay(){\n        const today = new Date();\n        const d = today.getDate();\n        const m = today.getMonth() + 1;\n        const y = today.getFullYear();\n        return `${y}-${m}-${d}`\n      },\n      onSubmit() {\n        const {value, category, date} = this.form;\n        const data = {\n          id: this.categoryList.length + 1,\n          category,\n          value,\n          date: date || this.getCurrentDay()\n        }\n        this.$emit('updateCosts', data);\n      },\n    }\n  }\n</script>"]}]}